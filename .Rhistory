load("~/Advisory/3_Coursera - The Data Science Specialization/2 - R Programming/2_Assignment/Week 2 Programming Assignment Data/.RData")
library(jpeg)
readJPEG("C:/test/getdata-jeff.jpg", native = TRUE)
test <- readJPEG("C:/test/getdata-jeff.jpg", native = TRUE)
test
test[1:30]
test[30,80]
test[30:80]
head(test)
head(test[1:30])
quantile(test)
quantile(test,probs=c(0.3,0.8))
a <- makeVector(c(1,2,3,4))
setwd("~/Advisory/3_Coursera - The Data Science Specialization/2 - R Programming/3_Project/ProgrammingAssignment2")
a <- makeVector(c(1,2,3,4))
setwd("~/Advisory/3_Coursera - The Data Science Specialization/2 - R Programming/3_Project/ProgrammingAssignment2")
load("~/Advisory/3_Coursera - The Data Science Specialization/2 - R Programming/3_Project/ProgrammingAssignment2/cachevector.R")
load("~/Advisory/3_Coursera - The Data Science Specialization/2 - R Programming/3_Project/ProgrammingAssignment2/README.md")
setmean = setmean,
source('~/Advisory/3_Coursera - The Data Science Specialization/2 - R Programming/3_Project/ProgrammingAssignment2/cachevector.R')
a <- makeVector(c(1,2,3,4))
a$get()
source('~/Advisory/3_Coursera - The Data Science Specialization/2 - R Programming/3_Project/ProgrammingAssignment2/cachematrix.R')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
a$getmean()
amatrix$getinverse()
source('~/Advisory/3_Coursera - The Data Science Specialization/2 - R Programming/3_Project/ProgrammingAssignment2/cachematrix.R')
amatrix$getinverse()
amatrix$getinverse()
cachemean(a)
cacheSolve(amatrix)
amatrix$getinverse()
amatrix$getinverse()
amatrix$getinverse()
amatrix$getinverse()
amatrix$getinverse()
amatrix$get()
amatrix$get()
amatrix$getinverse()
get <- function() x
amatrix$getinverse()
source('~/Advisory/3_Coursera - The Data Science Specialization/2 - R Programming/3_Project/ProgrammingAssignment2/cachematrix.R')
amatrix$getinverse()
amatrix$getinverse()
amatrix$getinverse()
amatrix$getinverse()
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
amatrix$getinvers()
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
amatrix$getinvers()
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
amatrix$getinvers()
cacheSolve(amatrix)
mm <- matrix(c(1,2,3,4), nrow=2, ncol=2)
solve(mm)
amatrix$get()
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
cacheSolve(amatrix)
amatrix.set(matrix(c(1,2,3,4), nrow=2, ncol=2)))
amatrix.set(mm)
amatrix.setinverse(mm)
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
amatrix$set(mm)
amatrix$get()
mm <- matrix(c(4,3,2,1), nrow=2, ncol=2)
amatrix$set(mm)
amatrix$get()
amatrix$getinverse(mm)
amatrix$getinverse()
amatrix$setinverse(mm)
source('~/Advisory/3_Coursera - The Data Science Specialization/2 - R Programming/3_Project/ProgrammingAssignment2/cachematrix.R')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$setinverse(mm)
amatrix$getinverse()
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
amatrix$getinverse()
cacheSolve(amatrix)
cacheSolve(amatrix)
amatrix$getinverse()
amatrix$set(matrix(c(0,5,99,66), nrow=2, ncol=2))
cacheSolve(amatrix)
amatrix$get()
amatrix$getinverse()
cacheSolve(amatrix)
source('~/Advisory/3_Coursera - The Data Science Specialization/2 - R Programming/3_Project/ProgrammingAssignment2/cachematrix.R')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
amatrix$getinverse()
cacheSolve(amatrix)
amatrix$getinverse()
cacheSolve(amatrix)
